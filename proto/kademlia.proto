syntax = "proto3";

package kademlia;

message NodeInfo{
    string id = 1;
    string ip = 2;
    uint32 port = 3;
    bytes pkey = 4;
    bool bootstrap = 5;
    bool miner = 6;
}

message BucketNode{
    uint32 position = 1;
    NodeInfo info = 2;
}

message KBucket{
    repeated BucketNode nodes = 1;
}

message Neighbour{
    string neighbour = 1;
    uint32 time = 2;
}

message Node{
    NodeInfo info = 1;
    bytes skey = 2;
    repeated KBucket kbuckets = 4;
    repeated string neighbours = 5;
    repeated bytes blockchain = 6;
}

message Signature{
    bytes hash = 1;
    bytes pkey = 2;
}
message Block{
    bytes prev_hash = 1;
    uint32 nonce = 2;
    bytes merkle_root =3;
}
message Bid{
    bytes name = 1;
    string highest_bidder = 2;
    uint32 value = 3;
    repeated string participants = 4;
}

service Endpoint{
  rpc Join(JoinRequest) returns (JoinResponse);
  rpc FindNode(FindNodeRequest) returns (FindNodeResponse);
  rpc UpdateNode(UpdateRequest) returns (UpdateResponse);
  rpc GetNeighbours(NeighboursRequest) returns (NeighboursResponse);
  rpc RemoveNode(RemoveRequest) returns (RemoveResponse);
  rpc Transaction(TransactionRequest) returns (TransactionResponse);
  rpc ObtainTransactions(ObtainTransactionsRequest) returns (ObtainTransactionsResponse);
  rpc RetrieveBlockchain(RetrieveBlockchainRequest) returns (RetrieveBlockchainResponse);
  rpc UpdateBlockchain(UpdateBlockchainRequest) returns (UpdateBlockchainResponse);
  rpc CreateBid(CreateBidRequest) returns (CreateBidResponse);
  rpc BidValue(BidValueRequest) returns (BidValueResponse);
}

message JoinRequest {
    Node node = 1;
    Signature sign = 2;
}
message JoinResponse {
    repeated NodeInfo neighbours = 1;
    repeated bytes blockchain = 2;
    Signature sign = 3;
}
message PingRequest {
    NodeInfo node = 1;
    Signature sign = 2;
}
message PingResponse {
    bool response = 1;
    Signature sign = 2;
}
message FindNodeRequest{
    string source_id = 1;
    string target = 2;
    Signature sign = 3;
}
message FindNodeResponse{
    string source_id = 1;
    NodeInfo node = 2;
    Signature sign = 3;
}
message UpdateRequest{
    string source_id = 1;
    repeated NodeInfo neighbours = 2;
    Signature sign = 3;
}
message UpdateResponse{
    string source_id = 1;
    bool response = 2;
    Signature sign = 3;
}
message NeighboursRequest{
    string source_id = 1;
    Signature sign = 2;
}
message NeighboursResponse{
    string source_id = 1;
    repeated NodeInfo neighbours = 2;
    Signature sign = 3;
}
message RemoveRequest{
    string source_id = 1;
    NodeInfo node = 2;
    Signature sign = 3;
}
message RemoveResponse{
    string source_id = 1;
    bool success = 2;
    Signature sign = 3;
}
message TransactionRequest{
    string source_id = 1;
    string sender = 2;
    uint32 value = 3;
    string destination = 4;
    Signature sign = 5;
}
message TransactionResponse{
    string source_id = 1;
    string state = 2;
    Signature sign = 3;
}
message RetrieveBlockchainRequest{
    string source_id = 1;
    Signature sign = 2;
}
message RetrieveBlockchainResponse{
    string source_id = 1;
    repeated Block blockchain = 2;
    Signature sign = 3;
}
message UpdateBlockchainRequest{
    string source_id = 1;
    Block new = 2;
    Signature sign = 3;
}
message UpdateBlockchainResponse{
    string source_id = 1;
    Signature sign = 2;
}
message ObtainTransactionsRequest{
    string source_id = 1;
    Signature sign = 2;
}
message ObtainTransactionsResponse{
    string source_id = 1;
    repeated string transactions = 2;
    Signature sign = 3;
}
message CreateBidRequest{
    string source_id = 1;
    Signature sign = 2;
}
message CreateBidResponse{
    string source_id = 1;
    string bid_name = 2;
    Signature sign = 3;
}
message BidValueRequest{
    string source_id = 1;
    uint32 value = 2;
    Signature sign = 3;
}
message BidValueResponse{
    string source_id = 1;
    bool success = 2;
    Signature sign = 3;
}
service Miner{
    rpc Mine(MineRequest) returns (MineResponse);
    rpc Abort(AbortRequest) returns (AbortResponse);
}
message MineRequest{
    string source_id = 1;
    Block previous = 2;
    repeated string transactions = 3;
}
message MineResponse{
    string source_id = 1;
    Block new = 2;
}
message AbortRequest{
    string source_id = 1;
    Signature sign = 2;
}
message AbortResponse{
    string source_id = 1;
    Signature sign = 2;
}